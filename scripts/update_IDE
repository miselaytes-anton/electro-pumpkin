#!/bin/sh
#
# This script copies the core Bela files to the board
# in preparation for building projects. It will remove any existing
# Bela directory before copying the files over

[ -z "$BBB_ADDRESS" ] && BBB_ADDRESS="root@192.168.7.2"
[ -z "$BBB_BELA_HOME" ] && BBB_BELA_HOME="/root/Bela"

ALWAYS_YES=0
FULL=1

usage()
{
    THIS_SCRIPT=`basename "$0"`
    echo "Usage: $THIS_SCRIPT [-y] [-b path-on-beaglebone]"

    echo "
    This script copies the Bela IDE files to the board, REMOVING
    any previous files found at that location. You should run this script when 
    you already have a Bela folder on your board (e.g.: you should have run
    \"update_board\" first.
    The -b option changes the default path, which is otherwise $BBB_BELA_HOME.
    The -y option prevents the script from prompting for confirmation.
    The --no-frills options skips some optional steps."
}

while [ -n "$1" ]
do
	case $1 in
	-y)
		ALWAYS_YES=1
	;;
    -b)
		shift
		BBB_BELA_HOME=$1
	;;
	--no-frills)
		FULL=0
	;;
	*)
		usage
        exit 1
	;;
	esac
	shift
done

# Find location of this script so we can locate the rest of the files
SCRIPTDIR=$(dirname "$0")

printf "Warning: this script will DELETE any existing IDE files from your board and install the IDE. Continue? (y/N) "

if [ "$ALWAYS_YES" -eq 1 ];
then
  printf "y\n"
else 
  read REPLY;
  [ -z "$REPLY" ] || { [ "$REPLY" !=  y ]  && [ "$REPLY" != Y ]; } && { echo "Aborting..."; exit 1; }
fi


# Copy relevant files to the board
printf "Copying new IDE files to the board..."
[ -z "$USE_RSYNC" ] && { [ -z "`which rsync`" ] && USE_RSYNC=0 || USE_RSYNC=1; }

if [ "$USE_RSYNC" -eq 1 ]
then
  printf "using rsync..."
  rsync -ac --no-t --delete-after --exclude=IDE/frontend-dev "$SCRIPTDIR"/../IDE "$BBB_ADDRESS":"$BBB_BELA_HOME"
else
  #if rsync is not available, let's clean the folder first
  ssh "$BBB_ADDRESS" "rm -rf \"$BBB_BELA_HOME\"/IDE ; mkdir -p \"$BBB_BELA_HOME\"/IDE" || { printf "\nError while removing the old files, is the board connected?\n"; exit 1; }
  printf "using scp...might take a while ..."
  scp -rq "$SCRIPTDIR"/../IDE "$BBB_ADDRESS":"$BBB_BELA_HOME"
fi
[ $? -eq 0 ] &&\
printf "done\n" || { printf "\nError while copying files: error $?\n"; exit 1; }

# Make sure the projects folder exists and there is a project in it
ssh "$BBB_ADDRESS" "cd \"$BBB_BELA_HOME\"/; mkdir -p \"$BBB_BELA_HOME\"/IDE/public/media; mkdir -p projects/; [ -d projects/basic ] || cp -r IDE/templates/C/ projects/basic/"

# If there are any C/C++ files, rebuild node dependencies
find "$SCRIPTDIR"/../IDE/node_modules | grep '\(\.cpp\|\.cc\|\.c\|\.hpp\|\.hh\|\.h\)$' >/dev/null 2>&1 &&\
{ 
	printf "Rebuilding node dependencies..."
	ssh "$BBB_ADDRESS" "cd \"$BBB_BELA_HOME\"/IDE/; npm rebuild &>/dev/null" &&\
	printf "done\n" || { printf "\nError while rebuilding dependencies.\n"; exit 1; }
}

echo "The IDE was correctly updated"

[ "$FULL" -eq 1 ] && {
	ssh "$BBB_ADDRESS" "make --no-print-directory -C \"$BBB_BELA_HOME\" idestart" ||\
	echo "Error while starting IDE" >&2
}

[ "$ALWAYS_YES" -eq 1 ] || [ "$FULL" -eq 0 ] && printf "\nSetup complete.\n\n" || {
  printf '\nIDE setup complete, press any key to continue . . .\n\n'
  read -n 1  
}

